<html>
  <head>
    <title>Environment Taxonomy Composition</title>
    <script src="//cdnjs.cloudflare.com/ajax/libs/jquery/1.8.3/jquery.min.js"></script>
    <script src="//cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/2.2.2/bootstrap.min.js"></script>
    <script type="text/javascript" src="http://d3js.org/d3.v3.min.js"></script>
    {{adjust_iframe_height_script}}
    <style>
      <!--
      path {
        stroke: #000;
        stroke-width: 1.5;
        cursor: pointer;
      }
      -->
      path {
        stroke: #000;
        cursor: pointer;
      }
      <!--
      text {
        font: 11px sans-serif;
        cursor: pointer;
      }
      -->
      text {
        font: 10px sans-serif;
        cursor: pointer;
        font-family:"Helvetica Neue", Helvetica, Arial, sans-serif;
      }

      body {
        width: 880px;
        margin: 0 auto;
      }

      td {
        font: 12px sans-serif;
        cursor: pointer;
        font-family:"Helvetica Neue", Helvetica, Arial, sans-serif;
      }

      h1 {
        text-align: center;
        margin: .5em 0;
      }

      p#intro {
        text-align: center;
        margin: 1em 0;
      }

      #breadcrumbs { display: none; }

      .tooltip {
        position: absolute;
        text-align: left;
        font: 12px sans-serif;
        background: #FFFFFF;
        color: #333333;
        border: solid 1px #B4B4B4;
        border-radius: 8px;
        padding: 10px 10px 10px 10px;
      }
    </style>
    <script type="text/javascript">

function init() {
   d3.json('./ortholog_group_members_in_phenotypes/resources/tax_dis?cluster_id={{param_cluster_id}}', function(error, data) {
   draw(data.tax_dis);
   })
}

function draw(data) {
    var h = 250;
var w = 800;
//console.log(data);
    var svg = d3.select("#vis")
  	.append("svg")
        .attr("width", w)
        .attr("height", h)
  	.append("g");

    var mpocolor = {
	//MPO_01015:'#EDF2C5',
	MPO_01007:'#84CCC9',
	MPO_01003:'#B9C998',
	MPO_01018:'#F8C5AC',
	MPO_01012:'#D5EAD8',
	MPO_01022:'#C8A06C',
	MPO_01005:'#8FB896',
	MPO_01009:'#D9BA8C',
	MPO_01010:'#9B7B6C',
	//MPO_01015:'#FACD89',
	MPO_01015:'#89BCD6',
	MPO_0000427:'#AA965C',
	MPO_0000635:'#F7C8CE',
	MPO_0000036:'#7ECEF4',
	MPO_0000066:'#B9C2BB',
	MPO_0000405:'#9FD9F6',
	MPO_0000406:'#C8BCB5',
	MPO_0000407:'#F5B090',
	MPO_0000409:'#C7BDC2',
	MPO_0000425:'#6C9BD2',
	MPO_0000417:'#A7BE70',
	MPO_0000420:'#90AD66',
	MPO_0000632:'#B9C3C9'
    }

    var tooltip = d3.select("body")
	.append("div")
	.style("position", "relative")
	.style("z-index", "10")
	.style("visibility", "hidden")
        .style("font-size", "12px")
	.style("font-family", "sans-serif")
        .style("fill", "#333333");
    var scale = d3.scale.linear()
	.domain([0, d3.max(data, function(d){ return Number(d.count) })])	//正規化される値の範囲を指定(0〜val1の最大値)
	.range([0, w-50]);
    var barchart = svg.selectAll('rect')	//rect要素を選択
	.data(data)	//データセットを束縛
	.enter()	//データセットの数に対して選択された要素がいくつ足りないかチェック
	.append('rect')	//足りない分のrect要素を追加
	.attr({
		x: 0,
		y: function(d, i){ return i * 25 },			//データのインデックス数をy属性に反映
		width: function(d){ return scale(Number(d.count)) },	//データの値(val1)を正規化してwidth属性に反映
		height: 20,
	})
	.attr("fill", function(d) {
		var mpo=d.mpo.match(/MPO_\d+/);
		return mpocolor[mpo];
		}
	);

      svg.selectAll("text.count")
                    .data(data)
                    .enter()
                    .append("text")
                    .text(function(d) {
                            return d.count;
                        })
                    .attr("text-anchor", "middle")
                    .attr("y", function(d,i) {
                            //return (i+1) * (barw+barPadding) - (barw-barPadding)/2;
                            return (i+1)*25-10
                        })
                    .attr("x", function() {
                            return 10 ;
                        })
                    .attr("font-family", "sans-serif")
                    .attr("font-size", "10px")
                    .attr("fill", "#ffffff");

         svg.selectAll("text.name")
                    .data(data)
                    .enter()
                    .append("text")
                    .text(function(d) {
                            return d.mpo_label;
                        })
                    .attr("text-anchor", "middle")
                    .attr("y", function(d,i) {
                            return (i+1)*25-10
                            //return (i+1) * (barw+barPadding) - (barw-barPadding)/2;
                        })
                    .attr("x", function() {
                            return 25;
                        })
                    .attr("text-anchor", "start")
                    .attr("font-family", "sans-serif")
                    .attr("font-size", "10px")
                    .attr("fill", "#333");

}
</script>
  </head>
  <body onload="init();">
    <div id="vis"></div>
  </body>
</html>

